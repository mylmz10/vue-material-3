//
// Copyright 2022 Google LLC
// SPDX-License-Identifier: Apache-2.0
//
//
// !!! THIS FILE WAS AUTOMATICALLY GENERATED !!!
// !!! DO NOT MODIFY IT BY HAND !!!
// Design system display name: Material 3
// Design system version name: v0.75
//

@use "sass:map";

@use "./md-sys-color";

@use "./md-sys-elevation";

@use "./md-sys-shape";

@use "./md-sys-state";

@use "./md-sys-typescale";

$_default: (
  md-sys-color: md-sys-color.values-light(),
  md-sys-elevation: md-sys-elevation.values(),
  md-sys-shape: md-sys-shape.values(),
  md-sys-state: md-sys-state.values(),
  md-sys-typescale: md-sys-typescale.values(),
);

@function values($deps: $_default, $exclude-hardcoded-values: false) {
  @return (
    active-indicator-color: map.get($deps, md-sys-color, secondary-container),
    active-indicator-height: if($exclude-hardcoded-values, null, 32px),
    active-indicator-shape: map.get($deps, md-sys-shape, corner-large),
    active-indicator-width: if($exclude-hardcoded-values, null, 64px),
    active-focus-icon-color:
      map.get($deps, md-sys-color, on-secondary-container),
    active-focus-label-text-color: map.get($deps, md-sys-color, on-surface),
    active-focus-state-layer-color: map.get($deps, md-sys-color, on-surface),
    active-hover-icon-color:
      map.get($deps, md-sys-color, on-secondary-container),
    active-hover-label-text-color: map.get($deps, md-sys-color, on-surface),
    active-hover-state-layer-color: map.get($deps, md-sys-color, on-surface),
    active-icon-color: map.get($deps, md-sys-color, on-secondary-container),
    active-label-text-color: map.get($deps, md-sys-color, on-surface),
    active-large-badge-label-color:
      map.get($deps, md-sys-color, secondary-container),
    active-large-badge-color:
      map.get($deps, md-sys-color, on-secondary-container),
    active-large-badge-outline-color:
      map.get($deps, md-sys-color, secondary-container),
    active-pressed-icon-color:
      map.get($deps, md-sys-color, on-secondary-container),
    active-pressed-label-text-color: map.get($deps, md-sys-color, on-surface),
    active-pressed-state-layer-color: map.get($deps, md-sys-color, on-surface),
    badge-color: map.get($deps, md-sys-color, error),
    badge-outline-color: map.get($deps, md-sys-color, surface),
    badge-outline-width: if($exclude-hardcoded-values, null, 2px),
    badge-shape: if($exclude-hardcoded-values, null, 3px),
    badge-size: if($exclude-hardcoded-values, null, 6px),
    container-color: map.get($deps, md-sys-color, surface),
    container-elevation: map.get($deps, md-sys-elevation, level2),
    container-height: if($exclude-hardcoded-values, null, 80px),
    container-shadow-color: map.get($deps, md-sys-color, shadow),
    container-shape: map.get($deps, md-sys-shape, corner-none),
    container-surface-tint-layer-color:
      map.get($deps, md-sys-elevation, surface-tint-color),
    focus-state-layer-opacity:
      map.get($deps, md-sys-state, focus-state-layer-opacity),
    hover-state-layer-opacity:
      map.get($deps, md-sys-state, hover-state-layer-opacity),
    icon-size: if($exclude-hardcoded-values, null, 24px),
    inactive-focus-icon-color: map.get($deps, md-sys-color, on-surface),
    inactive-focus-label-text-color: map.get($deps, md-sys-color, on-surface),
    inactive-focus-state-layer-color: map.get($deps, md-sys-color, on-surface),
    inactive-hover-icon-color: map.get($deps, md-sys-color, on-surface),
    inactive-hover-label-text-color: map.get($deps, md-sys-color, on-surface),
    inactive-hover-state-layer-color: map.get($deps, md-sys-color, on-surface),
    inactive-icon-color: map.get($deps, md-sys-color, on-surface-variant),
    inactive-label-text-color: map.get($deps, md-sys-color, on-surface-variant),
    inactive-large-badge-label-color: map.get($deps, md-sys-color, on-error),
    inactive-large-badge-color: map.get($deps, md-sys-color, error),
    inactive-large-badge-outline-color: map.get($deps, md-sys-color, surface),
    inactive-pressed-icon-color: map.get($deps, md-sys-color, on-surface),
    inactive-pressed-label-text-color: map.get($deps, md-sys-color, on-surface),
    inactive-pressed-state-layer-color: map.get($deps, md-sys-color, on-surface),
    label-text-font: map.get($deps, md-sys-typescale, label-medium-font),
    label-text-font-family: map.get($deps, md-sys-typescale, label-medium-font),
    label-text-font-size: map.get($deps, md-sys-typescale, label-medium-size),
    label-text-letter-spacing:
      map.get($deps, md-sys-typescale, label-medium-tracking),
    label-text-line-height:
      map.get($deps, md-sys-typescale, label-medium-line-height),
    label-text-size: map.get($deps, md-sys-typescale, label-medium-size),
    label-text-tracking: map.get($deps, md-sys-typescale, label-medium-tracking),
    label-text-type:
      if(
        $exclude-hardcoded-values,
        null,
        /** Typography composite token is not supported. Please use discrete typography tokens. */
          null
      ),
    label-text-weight: map.get($deps, md-sys-typescale, label-medium-weight),
    large-badge-label-color: map.get($deps, md-sys-color, on-error),
    large-badge-label-font-family:
      map.get($deps, md-sys-typescale, label-small-font),
    large-badge-label-font-size:
      map.get($deps, md-sys-typescale, label-small-size),
    large-badge-label-letter-spacing:
      map.get($deps, md-sys-typescale, label-small-tracking),
    large-badge-label-line-height:
      map.get($deps, md-sys-typescale, label-small-line-height),
    large-badge-label-type:
      if(
        $exclude-hardcoded-values,
        null,
        /** Typography composite token is not supported. Please use discrete typography tokens. */
          null
      ),
    large-badge-label-weight:
      map.get($deps, md-sys-typescale, label-small-weight),
    large-badge-color: map.get($deps, md-sys-color, error),
    large-badge-outline-width: if($exclude-hardcoded-values, null, 2px),
    large-badge-shape: if($exclude-hardcoded-values, null, 8px),
    large-badge-size: if($exclude-hardcoded-values, null, 16px),
    pressed-state-layer-opacity:
      map.get($deps, md-sys-state, pressed-state-layer-opacity)
  );
}
