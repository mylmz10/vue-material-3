//
// Copyright 2022 Google LLC
// SPDX-License-Identifier: Apache-2.0
//
//
// !!! THIS FILE WAS AUTOMATICALLY GENERATED !!!
// !!! DO NOT MODIFY IT BY HAND !!!
// Design system display name: Material 3
// Design system version name: v0.96
//

@use 'sass:map';

@use './md-sys-color';

@use './md-sys-elevation';

@use './md-sys-shape';

@use './md-sys-state';

@use './md-sys-typescale';

$_default: (
  md-sys-color: md-sys-color.values-light-dynamic(),
  md-sys-elevation: md-sys-elevation.values(),
  md-sys-shape: md-sys-shape.values(),
  md-sys-state: md-sys-state.values(),
  md-sys-typescale: md-sys-typescale.values(),
);

@function values($deps: $_default, $exclude-hardcoded-values: false) {
  @return (
    action-focus-label-text-color: map.get($deps, md-sys-color, primary),
    action-focus-state-layer-color: map.get($deps, md-sys-color, primary),
    action-focus-state-layer-opacity:
      map.get($deps, md-sys-state, focus-state-layer-opacity),
    action-hover-label-text-color: map.get($deps, md-sys-color, primary),
    action-hover-state-layer-color: map.get($deps, md-sys-color, primary),
    action-hover-state-layer-opacity:
      map.get($deps, md-sys-state, hover-state-layer-opacity),
    action-label-text-color: map.get($deps, md-sys-color, primary),
    action-label-text-font: map.get($deps, md-sys-typescale, label-large-font),
    action-label-text-line-height:
      map.get($deps, md-sys-typescale, label-large-line-height),
    action-label-text-size: map.get($deps, md-sys-typescale, label-large-size),
    action-label-text-tracking:
      map.get($deps, md-sys-typescale, label-large-tracking),
    action-label-text-type:
      if(
        $exclude-hardcoded-values,
        null,
        /** Typography composite token is not supported. Please use discrete typography tokens. */
          null
      ),
    action-label-text-weight:
      map.get($deps, md-sys-typescale, label-large-weight),
    action-pressed-label-text-color: map.get($deps, md-sys-color, primary),
    action-pressed-state-layer-color: map.get($deps, md-sys-color, primary),
    action-pressed-state-layer-opacity:
      map.get($deps, md-sys-state, pressed-state-layer-opacity),
    container-color: map.get($deps, md-sys-color, surface),
    container-elevation: map.get($deps, md-sys-elevation, level1),
    container-shape: map.get($deps, md-sys-shape, corner-none),
    container-surface-tint-layer-color:
      map.get($deps, md-sys-color, surface-tint),
    desktop-with-single-line-container-height:
      if($exclude-hardcoded-values, null, 52px),
    desktop-with-three-lines-container-height:
      if($exclude-hardcoded-values, null, 90px),
    desktop-with-two-lines-with-image-container-height:
      if($exclude-hardcoded-values, null, 72px),
    divider-color: map.get($deps, md-sys-color, surface-variant),
    divider-height: if($exclude-hardcoded-values, null, 1px),
    mobile-with-single-line-container-height:
      if($exclude-hardcoded-values, null, 54px),
    mobile-with-two-lines-container-height:
      if($exclude-hardcoded-values, null, 112px),
    mobile-with-two-lines-with-image-container-height:
      if($exclude-hardcoded-values, null, 120px),
    supporting-text-color: map.get($deps, md-sys-color, on-surface-variant),
    supporting-text-font: map.get($deps, md-sys-typescale, body-medium-font),
    supporting-text-line-height:
      map.get($deps, md-sys-typescale, body-medium-line-height),
    supporting-text-size: map.get($deps, md-sys-typescale, body-medium-size),
    supporting-text-tracking:
      map.get($deps, md-sys-typescale, body-medium-tracking),
    supporting-text-type:
      if(
        $exclude-hardcoded-values,
        null,
        /** Typography composite token is not supported. Please use discrete typography tokens. */
          null
      ),
    supporting-text-weight: map.get($deps, md-sys-typescale, body-medium-weight),
    with-image-image-shape: map.get($deps, md-sys-shape, corner-full),
    with-image-image-size: if($exclude-hardcoded-values, null, 40px)
  );
}
